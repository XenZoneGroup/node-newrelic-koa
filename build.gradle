import groovy.json.JsonSlurper

plugins {
  id 'com.drumcussac.build.plugin.project.nodeadaptor' version '0.2.1-dev.5+e6bdb77'
  id 'nebula.release' version '6.0.0'
}

rcNode {
  nodeVersion = '8.9.2'
}

task cleanArchetype(type: NodeTask) {
  script = file('scripts/clean.js')
  args = [project.name]
}

task installShellJs(type: NpmTask) {
  args = ['install', 'shelljs', '--no-save']
}

task installMinimist(type: NpmTask) {
  args = ['install', 'minimist', '--no-save']
}

tasks.cleanArchetype.dependsOn 'installShellJs'
tasks.cleanArchetype.dependsOn 'installMinimist'

// Temporary task definitions (to be rolled into plugin later)
// exposes
// - test
// - lint
// - assemble
// - build = [test, lint, assemble]
// - publish = [assemble, push]

tasks.npm_test.dependsOn 'yarn_install'
tasks.npm_clean.dependsOn 'yarn_install'
tasks.npm_build.dependsOn 'yarn_install'
tasks.npm_lint.dependsOn 'yarn_install'
tasks.npm_push.dependsOn 'yarn_install'
tasks.npm_publish_major.dependsOn 'yarn_install'
tasks.npm_publish_minor.dependsOn 'yarn_install'
tasks.npm_publish_patch.dependsOn 'yarn_install'

tasks.yarn_test.dependsOn 'yarn_install'
tasks.yarn_clean.dependsOn 'yarn_install'
tasks.yarn_build.dependsOn 'yarn_install'
tasks.yarn_lint.dependsOn 'yarn_install'
tasks.yarn_push.dependsOn 'yarn_install'
tasks.yarn_publish_major.dependsOn 'yarn_install'
tasks.yarn_publish_minor.dependsOn 'yarn_install'
tasks.yarn_publish_patch.dependsOn 'yarn_install'

task test(overwrite: true)
tasks.test.dependsOn 'yarn_test'

task lint
tasks.lint.dependsOn 'yarn_lint'

task build
tasks.build.dependsOn 'test'
tasks.build.dependsOn 'lint'
tasks.build.dependsOn 'assemble'

task publish
tasks.publish.dependsOn 'yarn_push'
// END Temporary task definitions

def getVersionFromPackageDefinition(){
  def packageSlurper = new JsonSlurper()
  def packageJson = packageSlurper.parse file('package.json')
  packageJson.version
}


project.setProperty("release.version", getVersionFromPackageDefinition())